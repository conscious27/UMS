{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class SharedStateServiceService {\n  constructor() {\n    this.adminDashboardRefreshSource = new BehaviorSubject(false);\n    this.adminDashboardRefresh$ = this.adminDashboardRefreshSource.asObservable();\n  }\n  triggerAdminDashboardRefresh() {\n    this.adminDashboardRefreshSource.next(true);\n  }\n}\n_class = SharedStateServiceService;\n_class.ɵfac = function SharedStateServiceService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","SharedStateServiceService","constructor","adminDashboardRefreshSource","adminDashboardRefresh$","asObservable","triggerAdminDashboardRefresh","next","factory","ɵfac","providedIn"],"sources":["D:\\Project Genpact\\UMS\\UniversityApp\\src\\app\\shared-state-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedStateServiceService {\n\n  constructor() { }\n\n  private adminDashboardRefreshSource = new BehaviorSubject<boolean>(false);\n  adminDashboardRefresh$ = this.adminDashboardRefreshSource.asObservable();\n\n  triggerAdminDashboardRefresh(){\n    this.adminDashboardRefreshSource.next(true);\n  }\n}\n"],"mappings":";AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,yBAAyB;EAEpCC,YAAA;IAEQ,KAAAC,2BAA2B,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;IACzE,KAAAI,sBAAsB,GAAG,IAAI,CAACD,2BAA2B,CAACE,YAAY,EAAE;EAHxD;EAKhBC,4BAA4BA,CAAA;IAC1B,IAAI,CAACH,2BAA2B,CAACI,IAAI,CAAC,IAAI,CAAC;EAC7C;;SATWN,yBAAyB;;mBAAzBA,MAAyB;AAAA;;SAAzBA,MAAyB;EAAAO,OAAA,EAAzBP,MAAyB,CAAAQ,IAAA;EAAAC,UAAA,EAFxB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}