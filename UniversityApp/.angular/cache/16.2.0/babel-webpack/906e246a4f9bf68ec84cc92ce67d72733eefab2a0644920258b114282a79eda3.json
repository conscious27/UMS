{"ast":null,"code":"var _class;\nimport jwtDecode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/course-reg.service\";\nimport * as i2 from \"src/app/shared/course-info.service\";\nimport * as i3 from \"src/app/shared/student-info.service\";\nimport * as i4 from \"@angular/forms\";\nexport class RegCourseComponent {\n  constructor(objService, courseService, studentService) {\n    this.objService = objService;\n    this.courseService = courseService;\n    this.studentService = studentService;\n  }\n  ngOnInit() {\n    const token = localStorage.getItem('authToken');\n    this.tokenPayload = jwtDecode(token);\n    this.resetForm();\n    this.studentService.getStudentInfo(this.tokenPayload.AdminId);\n    this.getAvailableCourses(this.studentService.StudentData.DepartmentId);\n  }\n  getAvailableCourses(id) {\n    this.courseService.getAllCourses(id);\n  }\n  resetForm(form) {\n    if (form != null) {\n      form.form.reset();\n    } else {\n      this.objService.CourseRegData = {\n        StudentId: this.tokenPayload.AdminId,\n        CourseId: \"\",\n        DateOfReg: new Date()\n      };\n    }\n  }\n  onSubmit(form) {\n    this.objService.postCourseReg().subscribe(res => {\n      this.resetForm(form);\n      this.objService.getCourseRegList();\n      alert('Course Registered Successful!');\n    }, err => {\n      alert('Error!' + err);\n    });\n  }\n}\n_class = RegCourseComponent;\n_class.ɵfac = function RegCourseComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CourseRegService), i0.ɵɵdirectiveInject(i2.CourseInfoService), i0.ɵɵdirectiveInject(i3.StudentInfoService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-reg-course\"]],\n  decls: 34,\n  vars: 16,\n  consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [\"autocomplete\", \"off\", 3, \"submit\"], [\"form\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"BranchId\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\", \"bg-white\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-user-circle-o\"], [\"name\", \"StudentId\", \"id\", \"StudentId\", \"placeholder\", \"Student Id\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"StudentId\", \"ngModel\"], [\"for\", \"BranchName\"], [\"name\", \"CourseId\", \"id\", \"CourseId\", \"placeholder\", \"Course Name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"CourseId\", \"ngModel\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-diamond\"], [\"type\", \"date\", \"name\", \"DateOfReg\", \"placeholder\", \"DateOfReg\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"DateOfReg\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-lg\", 3, \"disabled\"], [1, \"fa\", \"fa-database\"]],\n  template: function RegCourseComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3, 4);\n      i0.ɵɵlistener(\"submit\", function RegCourseComponent_Template_form_submit_3_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"label\", 6);\n      i0.ɵɵtext(7, \"Student Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"span\", 9);\n      i0.ɵɵelement(11, \"i\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function RegCourseComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.objService.branchData.StudentId = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 5)(15, \"label\", 13);\n      i0.ɵɵtext(16, \"Course Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"div\", 8)(19, \"span\", 9);\n      i0.ɵɵelement(20, \"i\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function RegCourseComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.objService.branchData.CourseId = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"div\", 5)(24, \"div\", 7)(25, \"div\", 8)(26, \"div\", 9);\n      i0.ɵɵelement(27, \"i\", 16);\n      i0.ɵɵelementStart(28, \"input\", 17, 18);\n      i0.ɵɵlistener(\"ngModelChange\", function RegCourseComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.objService.StudentData.DateOfReg = $event;\n      });\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(30, \"div\", 5)(31, \"button\", 19);\n      i0.ɵɵelement(32, \"i\", 20);\n      i0.ɵɵtext(33, \" Registered for Course \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(4);\n      const _r1 = i0.ɵɵreference(13);\n      const _r2 = i0.ɵɵreference(22);\n      const _r3 = i0.ɵɵreference(29);\n      i0.ɵɵadvance(11);\n      i0.ɵɵclassProp(\"green-icon\", _r1.valid)(\"red-icon\", _r1.invalid && _r1.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.objService.branchData.StudentId);\n      i0.ɵɵadvance(8);\n      i0.ɵɵclassProp(\"green-icon\", _r2.valid)(\"red-icon\", _r2.invalid && _r2.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.objService.branchData.CourseId);\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"green-icon\", _r3.valid)(\"red-icon\", _r3.invalid && _r3.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.objService.StudentData.DateOfReg);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["jwtDecode","RegCourseComponent","constructor","objService","courseService","studentService","ngOnInit","token","localStorage","getItem","tokenPayload","resetForm","getStudentInfo","AdminId","getAvailableCourses","StudentData","DepartmentId","id","getAllCourses","form","reset","CourseRegData","StudentId","CourseId","DateOfReg","Date","onSubmit","postCourseReg","subscribe","res","getCourseRegList","alert","err","i0","ɵɵdirectiveInject","i1","CourseRegService","i2","CourseInfoService","i3","StudentInfoService","selectors","decls","vars","consts","template","RegCourseComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","RegCourseComponent_Template_form_submit_3_listener","ɵɵrestoreView","_r4","_r0","ɵɵreference","ɵɵresetView","ɵɵtext","ɵɵelementEnd","ɵɵelement","RegCourseComponent_Template_input_ngModelChange_12_listener","$event","branchData","RegCourseComponent_Template_input_ngModelChange_21_listener","RegCourseComponent_Template_input_ngModelChange_28_listener","ɵɵadvance","ɵɵclassProp","_r1","valid","invalid","touched","ɵɵproperty","_r2","_r3"],"sources":["D:\\Project Genpact\\UMS\\UniversityApp\\src\\app\\student\\reg-course\\reg-course.component.ts","D:\\Project Genpact\\UMS\\UniversityApp\\src\\app\\student\\reg-course\\reg-course.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport jwtDecode from 'jwt-decode';\nimport { CourseInfoService } from 'src/app/shared/course-info.service';\nimport { CourseReg } from 'src/app/shared/course-reg.model';\nimport { CourseRegService } from 'src/app/shared/course-reg.service';\nimport { StudentInfoService } from 'src/app/shared/student-info.service';\n\n@Component({\n  selector: 'app-reg-course',\n  templateUrl: './reg-course.component.html',\n  styleUrls: ['./reg-course.component.css']\n})\nexport class RegCourseComponent implements OnInit {\n  tokenPayload:any;\n  constructor(public objService:CourseRegService, public courseService:CourseInfoService,\n    public studentService:StudentInfoService ){}\n  ngOnInit(): void {\n    const token: any = localStorage.getItem('authToken');\n    this.tokenPayload = jwtDecode(token);\n    this.resetForm();\n    this.studentService.getStudentInfo(this.tokenPayload.AdminId);\n    this.getAvailableCourses(this.studentService.StudentData.DepartmentId);\n  }\n\n  getAvailableCourses(id){\n    this.courseService.getAllCourses(id);\n  }\n\n  resetForm(form?:NgForm){\n    if(form!=null)\n    {\n      form.form.reset();\n    }\n    else{\n      this.objService.CourseRegData = {StudentId:this.tokenPayload.AdminId, CourseId:\"\", DateOfReg: new Date()};\n    }\n  }\n\n  onSubmit(form:NgForm)\n  {\n    this.objService.postCourseReg().subscribe(res=>\n      {\n        this.resetForm(form);\n        this.objService.getCourseRegList();\n        alert('Course Registered Successful!');\n      },\n      err=>{alert('Error!' + err);})\n  }\n\n\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-6\">\n        <form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n  \n  \n          <div class=\"form-group\">\n            <label for=\"BranchId\">Student Id</label>\n            <div class=\"input-group\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text bg-white\">\n                  <i class=\"fa fa-user-circle-o\" aria-hidden=\"true\" [class.green-icon]=\"StudentId.valid\"\n                    [class.red-icon]=\"StudentId.invalid && StudentId.touched\"></i>\n                </span>\n              </div>\n              <input name=\"StudentId\" #StudentId=\"ngModel\" [(ngModel)]=\"objService.branchData.StudentId\" id=\"StudentId\"\n                class=\"form-control\" placeholder=\"Student Id\" required>\n            </div>\n          </div>\n  \n          <div class=\"form-group\">\n            <label for=\"BranchName\">Course Id</label>\n            <div class=\"input-group\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text bg-white\">\n                  <i class=\"fa fa-user-circle-o\" aria-hidden=\"true\" [class.green-icon]=\"CourseId.valid\"\n                    [class.red-icon]=\"CourseId.invalid && CourseId.touched\"></i>\n                </span>\n              </div>\n              <input name=\"CourseId\" #CourseId=\"ngModel\" [(ngModel)]=\"objService.branchData.CourseId\"\n                id=\"CourseId\" class=\"form-control\" placeholder=\"Course Name\" required>\n            </div>\n          </div>\n  \n\n          <div class=\"form-group\">\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <div class=\"input-group-text bg-white\">\n                        <i class=\"fa fa-diamond\" aria-hidden=\"true\" [class.green-icon]=\"DateOfReg.valid\"\n                            [class.red-icon]=\"DateOfReg.invalid && DateOfReg.touched\"></i>\n                        <input type=\"date\" name=\"DateOfReg\" #DateOfReg=\"ngModel\" [(ngModel)]=\"objService.StudentData.DateOfReg\" placeholder=\"DateOfReg\"\n                            class=\"form-control\" required>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n          <div class=\"form-group\">\n            <button class=\"btn btn-success btn-lg\" type=\"submit\" [disabled]=\"form.invalid\">\n              <i class=\"fa fa-database\"></i> Registered for Course\n            </button>\n          </div>\n  \n        </form>\n      </div>\n    </div>\n  </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}