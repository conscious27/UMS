{"ast":null,"code":"var _class;\nimport { StudentInfo } from './student-info.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentInfoService {\n  constructor(objHttp) {\n    this.objHttp = objHttp;\n    this.StudentData = new StudentInfo();\n    this.StudentUrl = 'http://localhost:5175/api/Students';\n  }\n  postStudentInfo() {\n    return this.objHttp.post(this.StudentUrl, this.StudentData);\n  }\n  getStudentInfoList() {\n    return this.objHttp.get(this.StudentUrl).toPromise().then(res => this.StudentList = res);\n  }\n  getStudentInfo(id) {\n    return this.objHttp.get(this.StudentUrl + \"/\" + id).toPromise().then(res => this.StudentData = res);\n  }\n  getStudentInfoById(id) {\n    return this.objHttp.get(this.StudentUrl + \"/\" + id).toPromise().then(res => this.StudentData = res);\n  }\n  delStudentInfo(id) {\n    return this.objHttp.delete(this.StudentUrl + \"/\" + id);\n  }\n  putStudentInfo() {\n    return this.objHttp.put(this.StudentUrl + \"/\" + this.StudentData.StudentId, this.StudentData);\n  }\n  countStudent() {\n    return this.objHttp.get(this.StudentUrl + \"/count\");\n  }\n  getStudentsAddOn() {\n    return this.objHttp.get(this.StudentUrl + \"/StudentAddOn\").toPromise().then(res => this.StudentAddOnList = res);\n  }\n}\n_class = StudentInfoService;\n_class.ɵfac = function StudentInfoService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["StudentInfo","StudentInfoService","constructor","objHttp","StudentData","StudentUrl","postStudentInfo","post","getStudentInfoList","get","toPromise","then","res","StudentList","getStudentInfo","id","getStudentInfoById","delStudentInfo","delete","putStudentInfo","put","StudentId","countStudent","getStudentsAddOn","StudentAddOnList","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Project Genpact\\UMS\\UniversityApp\\src\\app\\shared\\student-info.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { StudentInfo } from './student-info.model';\r\nimport { StudentAddOn } from './student-add-on.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentInfoService {\r\n\r\n  StudentData: StudentInfo = new StudentInfo();\r\n  readonly StudentUrl = 'http://localhost:5175/api/Students';\r\n  StudentList: StudentInfo[];\r\n  StudentAddOnList : StudentAddOn[];\r\n  constructor(private objHttp: HttpClient) { }\r\n\r\n  postStudentInfo() {\r\n    return this.objHttp.post(this.StudentUrl, this.StudentData);\r\n  }\r\n  getStudentInfoList() {\r\n    return this.objHttp.get(this.StudentUrl).toPromise().then(res => this.StudentList = res as StudentInfo[]);\r\n  }\r\n  getStudentInfo(id){\r\n    return this.objHttp.get(this.StudentUrl+ \"/\" + id).toPromise().then(res => this.StudentData = res as StudentInfo);\r\n  }\r\n  getStudentInfoById(id){\r\n    return this.objHttp.get(this.StudentUrl+ \"/\" + id).toPromise().then(res => this.StudentData = res as StudentInfo);\r\n  }\r\n  delStudentInfo(id) {\r\n    return this.objHttp.delete(this.StudentUrl + \"/\" + id);\r\n  }\r\n  putStudentInfo() {\r\n    return this.objHttp.put(this.StudentUrl + \"/\" + this.StudentData.StudentId, this.StudentData);\r\n  }\r\n  countStudent() {\r\n    return this.objHttp.get(this.StudentUrl + \"/count\");\r\n  }\r\n  getStudentsAddOn(){\r\n    return this.objHttp.get(this.StudentUrl + \"/StudentAddOn\").toPromise().then(res => this.StudentAddOnList = res as StudentAddOn[]);\r\n  }\r\n}\r\n"],"mappings":";AACA,SAASA,WAAW,QAAQ,sBAAsB;;;AAOlD,OAAM,MAAOC,kBAAkB;EAM7BC,YAAoBC,OAAmB;IAAnB,KAAAA,OAAO,GAAPA,OAAO;IAJ3B,KAAAC,WAAW,GAAgB,IAAIJ,WAAW,EAAE;IACnC,KAAAK,UAAU,GAAG,oCAAoC;EAGf;EAE3CC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC,IAAI,CAACF,UAAU,EAAE,IAAI,CAACD,WAAW,CAAC;EAC7D;EACAI,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACL,OAAO,CAACM,GAAG,CAAC,IAAI,CAACJ,UAAU,CAAC,CAACK,SAAS,EAAE,CAACC,IAAI,CAACC,GAAG,IAAI,IAAI,CAACC,WAAW,GAAGD,GAAoB,CAAC;EAC3G;EACAE,cAAcA,CAACC,EAAE;IACf,OAAO,IAAI,CAACZ,OAAO,CAACM,GAAG,CAAC,IAAI,CAACJ,UAAU,GAAE,GAAG,GAAGU,EAAE,CAAC,CAACL,SAAS,EAAE,CAACC,IAAI,CAACC,GAAG,IAAI,IAAI,CAACR,WAAW,GAAGQ,GAAkB,CAAC;EACnH;EACAI,kBAAkBA,CAACD,EAAE;IACnB,OAAO,IAAI,CAACZ,OAAO,CAACM,GAAG,CAAC,IAAI,CAACJ,UAAU,GAAE,GAAG,GAAGU,EAAE,CAAC,CAACL,SAAS,EAAE,CAACC,IAAI,CAACC,GAAG,IAAI,IAAI,CAACR,WAAW,GAAGQ,GAAkB,CAAC;EACnH;EACAK,cAAcA,CAACF,EAAE;IACf,OAAO,IAAI,CAACZ,OAAO,CAACe,MAAM,CAAC,IAAI,CAACb,UAAU,GAAG,GAAG,GAAGU,EAAE,CAAC;EACxD;EACAI,cAAcA,CAAA;IACZ,OAAO,IAAI,CAAChB,OAAO,CAACiB,GAAG,CAAC,IAAI,CAACf,UAAU,GAAG,GAAG,GAAG,IAAI,CAACD,WAAW,CAACiB,SAAS,EAAE,IAAI,CAACjB,WAAW,CAAC;EAC/F;EACAkB,YAAYA,CAAA;IACV,OAAO,IAAI,CAACnB,OAAO,CAACM,GAAG,CAAC,IAAI,CAACJ,UAAU,GAAG,QAAQ,CAAC;EACrD;EACAkB,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACpB,OAAO,CAACM,GAAG,CAAC,IAAI,CAACJ,UAAU,GAAG,eAAe,CAAC,CAACK,SAAS,EAAE,CAACC,IAAI,CAACC,GAAG,IAAI,IAAI,CAACY,gBAAgB,GAAGZ,GAAqB,CAAC;EACnI;;SA/BWX,kBAAkB;;mBAAlBA,MAAkB,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlB3B,MAAkB;EAAA4B,OAAA,EAAlB5B,MAAkB,CAAA6B,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}