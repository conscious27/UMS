{"ast":null,"code":"var _class;\nimport { BranchInfo } from './shared/branch-info.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BranchInfoService {\n  constructor(objHttp) {\n    this.objHttp = objHttp;\n    this.branchData = new BranchInfo();\n    this.branchUrl = 'http://localhost:5175/api/Branches';\n  }\n  postBranchInfo() {\n    return this.objHttp.post(this.branchUrl, this.branchData);\n  }\n  getBranchInfoList() {\n    return this.objHttp.get(this.branchUrl).toPromise().then(res => this.branchList = res);\n  }\n  delBranchInfo(id) {\n    this.objHttp.delete(this.branchUrl + \"/\" + id);\n  }\n  putBranchInfo() {\n    this.objHttp.put(this.branchUrl + \"/\" + this.branchData.BranchId, this.branchData);\n  }\n  countBranch() {\n    return this.objHttp.get(this.branchUrl + \"/count\");\n  }\n  getBranchesWithDepartment() {\n    return this.objHttp.get(this.branchUrl + \"/BranchWithDep\").toPromise().then(res => this.branchWithDepList = res);\n  }\n  countBranch() {\n    return this.objHttp.get(this.depUrl + \"/count\");\n  }\n}\n_class = BranchInfoService;\n_class.ɵfac = function BranchInfoService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BranchInfo","BranchInfoService","constructor","objHttp","branchData","branchUrl","postBranchInfo","post","getBranchInfoList","get","toPromise","then","res","branchList","delBranchInfo","id","delete","putBranchInfo","put","BranchId","countBranch","getBranchesWithDepartment","branchWithDepList","depUrl","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Project Genpact\\UMS\\UniversityApp\\src\\app\\branch-info.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BranchInfo } from './shared/branch-info.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BranchWithDep } from './shared/branch-with-dep';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BranchInfoService {\r\n\r\n\r\n  branchData: BranchInfo = new BranchInfo();\r\n  readonly branchUrl = 'http://localhost:5175/api/Branches';\r\n  branchList: BranchInfo[];\r\n  branchWithDepList : BranchWithDep[];\r\n  constructor(private objHttp: HttpClient) { }\r\n\r\n  postBranchInfo() {\r\n    return this.objHttp.post(this.branchUrl, this.branchData);\r\n  }\r\n  getBranchInfoList() {\r\n    return this.objHttp.get(this.branchUrl).toPromise().then(res => this.branchList = res as BranchInfo[]);\r\n  }\r\n  delBranchInfo(id) {\r\n    this.objHttp.delete(this.branchUrl + \"/\" + id);\r\n  }\r\n  putBranchInfo() {\r\n    this.objHttp.put(this.branchUrl + \"/\" + this.branchData.BranchId, this.branchData);\r\n  }\r\n  countBranch() {\r\n    return this.objHttp.get(this.branchUrl + \"/count\");\r\n  }\r\n\r\n  getBranchesWithDepartment(){\r\n    return this.objHttp.get(this.branchUrl + \"/BranchWithDep\").toPromise().then(res => this.branchWithDepList = res as BranchWithDep[]);\r\n  }\r\n\r\n  countBranch(){\r\n    return this.objHttp.get(this.depUrl+\"/count\");\r\n  }\r\n  \r\n  \r\n}\r\n\r\n"],"mappings":";AACA,SAASA,UAAU,QAAQ,4BAA4B;;;AAOvD,OAAM,MAAOC,iBAAiB;EAO5BC,YAAoBC,OAAmB;IAAnB,KAAAA,OAAO,GAAPA,OAAO;IAJ3B,KAAAC,UAAU,GAAe,IAAIJ,UAAU,EAAE;IAChC,KAAAK,SAAS,GAAG,oCAAoC;EAGd;EAE3CC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC,IAAI,CAACF,SAAS,EAAE,IAAI,CAACD,UAAU,CAAC;EAC3D;EACAI,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACL,OAAO,CAACM,GAAG,CAAC,IAAI,CAACJ,SAAS,CAAC,CAACK,SAAS,EAAE,CAACC,IAAI,CAACC,GAAG,IAAI,IAAI,CAACC,UAAU,GAAGD,GAAmB,CAAC;EACxG;EACAE,aAAaA,CAACC,EAAE;IACd,IAAI,CAACZ,OAAO,CAACa,MAAM,CAAC,IAAI,CAACX,SAAS,GAAG,GAAG,GAAGU,EAAE,CAAC;EAChD;EACAE,aAAaA,CAAA;IACX,IAAI,CAACd,OAAO,CAACe,GAAG,CAAC,IAAI,CAACb,SAAS,GAAG,GAAG,GAAG,IAAI,CAACD,UAAU,CAACe,QAAQ,EAAE,IAAI,CAACf,UAAU,CAAC;EACpF;EACAgB,WAAWA,CAAA;IACT,OAAO,IAAI,CAACjB,OAAO,CAACM,GAAG,CAAC,IAAI,CAACJ,SAAS,GAAG,QAAQ,CAAC;EACpD;EAEAgB,yBAAyBA,CAAA;IACvB,OAAO,IAAI,CAAClB,OAAO,CAACM,GAAG,CAAC,IAAI,CAACJ,SAAS,GAAG,gBAAgB,CAAC,CAACK,SAAS,EAAE,CAACC,IAAI,CAACC,GAAG,IAAI,IAAI,CAACU,iBAAiB,GAAGV,GAAsB,CAAC;EACrI;EAEAQ,WAAWA,CAAA;IACT,OAAO,IAAI,CAACjB,OAAO,CAACM,GAAG,CAAC,IAAI,CAACc,MAAM,GAAC,QAAQ,CAAC;EAC/C;;SA/BWtB,iBAAiB;;mBAAjBA,MAAiB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAjB1B,MAAiB;EAAA2B,OAAA,EAAjB3B,MAAiB,CAAA4B,IAAA;EAAAC,UAAA,EAFhB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}