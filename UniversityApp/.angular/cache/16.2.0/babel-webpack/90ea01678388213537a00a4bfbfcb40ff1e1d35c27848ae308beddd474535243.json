{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/branch-info.service\";\nimport * as i2 from \"src/app/shared/department-info.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction BranchRegComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const department_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", department_r4.departmentid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(department_r4.departmentname);\n  }\n}\nexport class BranchRegComponent {\n  constructor(objService, depService) {\n    this.objService = objService;\n    this.depService = depService;\n    this.existingBranchId = this.objService.branchData.BranchId;\n  }\n  ngOnInit() {\n    this.loadDepartment();\n    if (this.existingBranchId) {\n      this.existingBranchId = this.objService.branchData.BranchId;\n      this.mode = \"update\";\n    } else {\n      this.resetForm();\n    }\n  }\n  resetForm(form) {\n    if (form != null) {\n      form.form.reset();\n    } else {\n      this.objService.branchData = {\n        BranchId: \"\",\n        BranchName: \"\",\n        DepartmentId: \"\"\n      };\n    }\n  }\n  onSubmit(form) {\n    if (this.mode == \"update\") {\n      this.updateRecord(form);\n    } else {\n      this.insertRecord(form);\n    }\n  }\n  insertRecord(form) {\n    this.objService.postBranchInfo().subscribe(res => {\n      this.resetForm(form);\n      this.objService.getBranchInfoList();\n      alert('New Branch Added');\n    }, err => {\n      alert('Error!' + err);\n    });\n  }\n  loadDepartment() {\n    this.depService.getDepartmentInfoList();\n  }\n  updateRecord(form) {\n    this.objService.putBranchInfo().subscribe(res => {\n      this.resetForm();\n      this.objService.getBranchInfoList();\n      alert('Branch Record Updated!');\n    }, err => {\n      alert('Error!' + err);\n    });\n  }\n}\n_class = BranchRegComponent;\n_class.ɵfac = function BranchRegComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.BranchInfoService), i0.ɵɵdirectiveInject(i2.DepartmentInfoService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-branch-reg\"]],\n  decls: 27,\n  vars: 17,\n  consts: [[\"autocomplete\", \"off\", 3, \"submit\"], [\"form\", \"ngForm\"], [1, \"form-group\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\", \"bg-white\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-user-circle-o\"], [\"name\", \"BranchId\", \"placeholder\", \"Branch Id\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"BranchId\", \"ngModel\"], [\"name\", \"BranchName\", \"placeholder\", \"Branch Name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"BranchName\", \"ngModel\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-diamond\"], [\"name\", \"DepartmentId\", \"id\", \"DepartmentId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-lg\", 3, \"disabled\"], [1, \"fa\", \"fa-database\"], [3, \"value\"]],\n  template: function BranchRegComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function BranchRegComponent_Template_form_submit_0_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5);\n      i0.ɵɵelement(6, \"i\", 6);\n      i0.ɵɵelementStart(7, \"input\", 7, 8);\n      i0.ɵɵlistener(\"ngModelChange\", function BranchRegComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.objService.depData.BranchId = $event;\n      });\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 3)(11, \"div\", 4)(12, \"div\", 5);\n      i0.ɵɵelement(13, \"i\", 6);\n      i0.ɵɵelementStart(14, \"input\", 9, 10);\n      i0.ɵɵlistener(\"ngModelChange\", function BranchRegComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.objService.depData.BranchName = $event;\n      });\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(16, \"div\", 2)(17, \"div\", 3)(18, \"div\", 4)(19, \"div\", 5);\n      i0.ɵɵelement(20, \"i\", 11);\n      i0.ɵɵelementStart(21, \"select\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function BranchRegComponent_Template_select_ngModelChange_21_listener($event) {\n        return ctx.objService.branchData.DepartmentId = $event;\n      });\n      i0.ɵɵtemplate(22, BranchRegComponent_option_22_Template, 2, 2, \"option\", 13);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(23, \"div\", 2)(24, \"button\", 14);\n      i0.ɵɵelement(25, \"i\", 15);\n      i0.ɵɵtext(26, \" Create/Update Branch \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      const _r1 = i0.ɵɵreference(8);\n      const _r2 = i0.ɵɵreference(15);\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"green-icon\", _r1.valid)(\"red-icon\", _r1.invalid && _r1.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.objService.depData.BranchId);\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"green-icon\", _r2.valid)(\"red-icon\", _r2.invalid && _r2.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.objService.depData.BranchName);\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"green-icon\", ctx.DepartmentId.valid)(\"red-icon\", ctx.DepartmentId.invalid && ctx.DepartmentId.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.objService.branchData.DepartmentId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.depService.depList);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","department_r4","departmentid","ɵɵadvance","ɵɵtextInterpolate","departmentname","BranchRegComponent","constructor","objService","depService","existingBranchId","branchData","BranchId","ngOnInit","loadDepartment","mode","resetForm","form","reset","BranchName","DepartmentId","onSubmit","updateRecord","insertRecord","postBranchInfo","subscribe","res","getBranchInfoList","alert","err","getDepartmentInfoList","putBranchInfo","ɵɵdirectiveInject","i1","BranchInfoService","i2","DepartmentInfoService","selectors","decls","vars","consts","template","BranchRegComponent_Template","rf","ctx","ɵɵlistener","BranchRegComponent_Template_form_submit_0_listener","ɵɵrestoreView","_r5","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","BranchRegComponent_Template_input_ngModelChange_7_listener","$event","depData","BranchRegComponent_Template_input_ngModelChange_14_listener","BranchRegComponent_Template_select_ngModelChange_21_listener","ɵɵtemplate","BranchRegComponent_option_22_Template","ɵɵclassProp","_r1","valid","invalid","touched","_r2","depList"],"sources":["D:\\Project Genpact\\UMS\\UniversityApp\\src\\app\\admin\\branch-reg\\branch-reg.component.ts","D:\\Project Genpact\\UMS\\UniversityApp\\src\\app\\admin\\branch-reg\\branch-reg.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BranchInfoService } from 'src/app/branch-info.service';\nimport { DepartmentInfoService } from 'src/app/shared/department-info.service';\n\n@Component({\n  selector: 'app-branch-reg',\n  templateUrl: './branch-reg.component.html',\n  styleUrls: ['./branch-reg.component.css']\n})\nexport class BranchRegComponent {\n  existingBranchId = this.objService.branchData.BranchId;\n  mode:any;\n  constructor(public objService:BranchInfoService, public depService:DepartmentInfoService){}\n  ngOnInit(){\n    this.loadDepartment();\n    if(this.existingBranchId){\n      this.existingBranchId = this.objService.branchData.BranchId;\n      this.mode=\"update\";\n    }\n    else{\n      this.resetForm()\n    }\n  }\n\n  resetForm(form?:NgForm){\n    if(form!=null)\n    {\n      form.form.reset();\n    }\n    else{\n      this.objService.branchData = {BranchId:\"\", BranchName:\"\", DepartmentId:\"\"}\n    }\n  }\n\n  onSubmit(form:NgForm)\n  {\n    if(this.mode==\"update\"){\n      this.updateRecord(form);\n    }else{\n      this.insertRecord(form);\n    }\n      \n  }\n\n  insertRecord(form:NgForm)\n  {\n    this.objService.postBranchInfo().subscribe(res=>\n      {\n        this.resetForm(form);\n        this.objService.getBranchInfoList();\n        alert('New Branch Added');\n      },\n      err=>{alert('Error!' + err);})\n  }\n\n  loadDepartment(){\n    this.depService.getDepartmentInfoList();\n  }\n\n  updateRecord(form:NgForm)\n  {\n    this.objService.putBranchInfo().subscribe(\n      res=>{\n        this.resetForm();\n        this.objService.getBranchInfoList();\n        alert('Branch Record Updated!');\n      },\n      err=> {\n        alert('Error!' + err);\n      }\n    )\n  }\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n\n    <div class=\"form-group\">\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text bg-white\">\n                    <i class=\"fa fa-user-circle-o\" aria-hidden=\"true\" [class.green-icon]=\"BranchId.valid\"\n                        [class.red-icon]=\"BranchId.invalid && BranchId.touched\"></i>\n                    <input name=\"BranchId\" #BranchId=\"ngModel\" [(ngModel)]=\"objService.depData.BranchId\"\n                        placeholder=\"Branch Id\" class=\"form-control\" required>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text bg-white\">\n                    <i class=\"fa fa-user-circle-o\" aria-hidden=\"true\" [class.green-icon]=\"BranchName.valid\"\n                        [class.red-icon]=\"BranchName.invalid && BranchName.touched\"></i>\n                    <input name=\"BranchName\" #BranchName=\"ngModel\" [(ngModel)]=\"objService.depData.BranchName\"\n                        placeholder=\"Branch Name\" class=\"form-control\" required>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"form-group\">\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text bg-white\">\n                    <i class=\"fa fa-diamond\" aria-hidden=\"true\" [class.green-icon]=\"DepartmentId.valid\"\n                        [class.red-icon]=\"DepartmentId.invalid && DepartmentId.touched\"></i>\n                    <select name=\"DepartmentId\" id=\"DepartmentId\" [(ngModel)]=\"objService.branchData.DepartmentId\"\n                        class=\"form-control\" required>\n                        <option *ngFor=\"let department of depService.depList\" [value]=\"department.departmentid\">{{\n                            department.departmentname }}</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"form-group\">\n        <button class=\"btn btn-success btn-lg\" type=\"submit\" [disabled]=\"form.invalid\">\n            <i class=\"fa fa-database\"></i> Create/Update Branch </button>\n    </div>\n\n\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}