{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let AuthenticationService = class AuthenticationService {\n  constructor(http, router, appCom) {\n    this.http = http;\n    this.router = router;\n    this.appCom = appCom;\n  }\n  authenticate(userID, password, userType) {\n    const body = {\n      userID,\n      password,\n      userType\n    };\n    return this.http.post('http://localhost:5175/api/Users/login', body).subscribe(response => {\n      const token = response.token;\n      console.log(\"Token: \", token);\n      // store the token in localStorage\n      localStorage.setItem('authToken', token);\n      if (userType == \"Admin\") {\n        this.router.navigate(['/admin_dashboard']);\n      } else if (userType == \"Student\") {\n        this.router.navigate(['/student_dashboard']);\n      } else if (userType == \"Faculty\") {\n        this.router.navigate(['/faculty_dashboard']);\n      }\n    }, error => {\n      console.error(error);\n    });\n  }\n  logout() {\n    // Remove the token from localStorage\n    localStorage.removeItem('authToken');\n    // Redirect to the login page (or any other appropriate page)\n    this.router.navigate(['/']); // Replace 'login' with your actual login route\n  }\n};\n\nAuthenticationService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthenticationService);","map":{"version":3,"names":["Injectable","AuthenticationService","constructor","http","router","appCom","authenticate","userID","password","userType","body","post","subscribe","response","token","console","log","localStorage","setItem","navigate","error","logout","removeItem","__decorate","providedIn"],"sources":["D:\\Project Genpact\\UMS\\UniversityApp\\src\\app\\authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n    \r\n  constructor(private http: HttpClient, private router:Router, private appCom:AppComponent){}\r\n\r\n  authenticate(userID: string, password: string, userType: string) {\r\n    const body = { userID, password, userType };\r\n    return this.http.post('http://localhost:5175/api/Users/login',body).subscribe(\r\n      (response : any) => {\r\n        const token = response.token;\r\n        console.log(\"Token: \", token)\r\n\r\n        // store the token in localStorage\r\n        localStorage.setItem('authToken', token);\r\n        if(userType == \"Admin\"){\r\n          this.router.navigate(['/admin_dashboard']);\r\n        }\r\n        else if(userType == \"Student\"){\r\n          this.router.navigate(['/student_dashboard']);\r\n        }\r\n        else if(userType == \"Faculty\"){\r\n          this.router.navigate(['/faculty_dashboard']);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    // Remove the token from localStorage\r\n    localStorage.removeItem('authToken');\r\n\r\n    // Redirect to the login page (or any other appropriate page)\r\n    this.router.navigate(['/']); // Replace 'login' with your actual login route\r\n  }\r\n  \r\n \r\n  \r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAQnC,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAGhCC,YAAoBC,IAAgB,EAAUC,MAAa,EAAUC,MAAmB;IAApE,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,MAAM,GAANA,MAAM;EAAe;EAE1FC,YAAYA,CAACC,MAAc,EAAEC,QAAgB,EAAEC,QAAgB;IAC7D,MAAMC,IAAI,GAAG;MAAEH,MAAM;MAAEC,QAAQ;MAAEC;IAAQ,CAAE;IAC3C,OAAO,IAAI,CAACN,IAAI,CAACQ,IAAI,CAAC,uCAAuC,EAACD,IAAI,CAAC,CAACE,SAAS,CAC1EC,QAAc,IAAI;MACjB,MAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAK;MAC5BC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAAC;MAE7B;MACAG,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEJ,KAAK,CAAC;MACxC,IAAGL,QAAQ,IAAI,OAAO,EAAC;QACrB,IAAI,CAACL,MAAM,CAACe,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;OAC3C,MACI,IAAGV,QAAQ,IAAI,SAAS,EAAC;QAC5B,IAAI,CAACL,MAAM,CAACe,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;OAC7C,MACI,IAAGV,QAAQ,IAAI,SAAS,EAAC;QAC5B,IAAI,CAACL,MAAM,CAACe,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;;IAEhD,CAAC,EACAC,KAAK,IAAI;MACRL,OAAO,CAACK,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAEAC,MAAMA,CAAA;IACJ;IACAJ,YAAY,CAACK,UAAU,CAAC,WAAW,CAAC;IAEpC;IACA,IAAI,CAAClB,MAAM,CAACe,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC/B;CAID;;AAxCYlB,qBAAqB,GAAAsB,UAAA,EAHjCvB,UAAU,CAAC;EACVwB,UAAU,EAAE;CACb,CAAC,C,EACWvB,qBAAqB,CAwCjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}