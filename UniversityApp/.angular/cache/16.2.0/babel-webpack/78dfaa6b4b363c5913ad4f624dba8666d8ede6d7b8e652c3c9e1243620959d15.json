{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BranchRegComponent = class BranchRegComponent {\n  constructor(objService, depService) {\n    this.objService = objService;\n    this.depService = depService;\n    this.existingBranchId = this.objService.branchData.BranchId;\n  }\n  ngOnInit() {\n    console.log(this.objService.branchData);\n    this.loadDepartment();\n    if (this.existingBranchId) {\n      this.existingBranchId = this.objService.branchData.BranchId;\n      this.mode = \"update\";\n    } else {\n      this.resetForm();\n    }\n  }\n  resetForm(form) {\n    if (form != null) {\n      form.form.reset();\n    } else {\n      this.objService.branchData = {\n        BranchId: \"\",\n        BranchName: \"\",\n        DepartmentId: \"\"\n      };\n    }\n  }\n  onSubmit(form) {\n    if (this.mode == \"update\") {\n      this.updateRecord(form);\n    } else {\n      this.insertRecord(form);\n    }\n  }\n  insertRecord(form) {\n    this.objService.postBranchInfo().subscribe(res => {\n      this.resetForm(form);\n      this.objService.getBranchInfoList();\n      alert('New Branch Added');\n    }, err => {\n      alert('Error!' + err);\n    });\n  }\n  loadDepartment() {\n    this.depService.getDepartmentInfoList();\n  }\n  updateRecord(form) {\n    this.objService.putBranchInfo().subscribe(res => {\n      this.resetForm();\n      this.objService.getBranchInfoList();\n      alert('Branch Record Updated!');\n    }, err => {\n      alert('Error!' + err);\n    });\n  }\n};\nBranchRegComponent = __decorate([Component({\n  selector: 'app-branch-reg',\n  templateUrl: './branch-reg.component.html',\n  styleUrls: ['./branch-reg.component.css']\n})], BranchRegComponent);","map":{"version":3,"names":["Component","BranchRegComponent","constructor","objService","depService","existingBranchId","branchData","BranchId","ngOnInit","console","log","loadDepartment","mode","resetForm","form","reset","BranchName","DepartmentId","onSubmit","updateRecord","insertRecord","postBranchInfo","subscribe","res","getBranchInfoList","alert","err","getDepartmentInfoList","putBranchInfo","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Project Genpact\\UMS\\UniversityApp\\src\\app\\admin\\branch-reg\\branch-reg.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { BranchInfoService } from 'src/app/branch-info.service';\r\nimport { DepartmentInfoService } from 'src/app/shared/department-info.service';\r\n\r\n@Component({\r\n  selector: 'app-branch-reg',\r\n  templateUrl: './branch-reg.component.html',\r\n  styleUrls: ['./branch-reg.component.css']\r\n})\r\nexport class BranchRegComponent {\r\n  existingBranchId = this.objService.branchData.BranchId;\r\n  mode:any;\r\n  constructor(public objService:BranchInfoService, public depService:DepartmentInfoService){}\r\n  ngOnInit(){\r\n    console.log(this.objService.branchData)\r\n    this.loadDepartment();\r\n    if(this.existingBranchId){\r\n      this.existingBranchId = this.objService.branchData.BranchId;\r\n      this.mode=\"update\";\r\n    }\r\n    else{\r\n      this.resetForm()\r\n    }\r\n  }\r\n\r\n  resetForm(form?:NgForm){\r\n    if(form!=null)\r\n    {\r\n      form.form.reset();\r\n    }\r\n    else{\r\n      this.objService.branchData = {BranchId:\"\", BranchName:\"\", DepartmentId:\"\"}\r\n    }\r\n  }\r\n\r\n  onSubmit(form:NgForm)\r\n  {\r\n    if(this.mode==\"update\"){\r\n      this.updateRecord(form);\r\n    }else{\r\n      this.insertRecord(form);\r\n    }\r\n      \r\n  }\r\n\r\n  insertRecord(form:NgForm)\r\n  {\r\n    this.objService.postBranchInfo().subscribe(res=>\r\n      {\r\n        this.resetForm(form);\r\n        this.objService.getBranchInfoList();\r\n        alert('New Branch Added');\r\n      },\r\n      err=>{alert('Error!' + err);})\r\n  }\r\n\r\n  loadDepartment(){\r\n    this.depService.getDepartmentInfoList();\r\n  }\r\n\r\n  updateRecord(form:NgForm)\r\n  {\r\n    this.objService.putBranchInfo().subscribe(\r\n      res=>{\r\n        this.resetForm();\r\n        this.objService.getBranchInfoList();\r\n        alert('Branch Record Updated!');\r\n      },\r\n      err=> {\r\n        alert('Error!' + err);\r\n      }\r\n    )\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAG7BC,YAAmBC,UAA4B,EAASC,UAAgC;IAArE,KAAAD,UAAU,GAAVA,UAAU;IAA2B,KAAAC,UAAU,GAAVA,UAAU;IAFlE,KAAAC,gBAAgB,GAAG,IAAI,CAACF,UAAU,CAACG,UAAU,CAACC,QAAQ;EAEoC;EAC1FC,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,UAAU,CAACG,UAAU,CAAC;IACvC,IAAI,CAACK,cAAc,EAAE;IACrB,IAAG,IAAI,CAACN,gBAAgB,EAAC;MACvB,IAAI,CAACA,gBAAgB,GAAG,IAAI,CAACF,UAAU,CAACG,UAAU,CAACC,QAAQ;MAC3D,IAAI,CAACK,IAAI,GAAC,QAAQ;KACnB,MACG;MACF,IAAI,CAACC,SAAS,EAAE;;EAEpB;EAEAA,SAASA,CAACC,IAAY;IACpB,IAAGA,IAAI,IAAE,IAAI,EACb;MACEA,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE;KAClB,MACG;MACF,IAAI,CAACZ,UAAU,CAACG,UAAU,GAAG;QAACC,QAAQ,EAAC,EAAE;QAAES,UAAU,EAAC,EAAE;QAAEC,YAAY,EAAC;MAAE,CAAC;;EAE9E;EAEAC,QAAQA,CAACJ,IAAW;IAElB,IAAG,IAAI,CAACF,IAAI,IAAE,QAAQ,EAAC;MACrB,IAAI,CAACO,YAAY,CAACL,IAAI,CAAC;KACxB,MAAI;MACH,IAAI,CAACM,YAAY,CAACN,IAAI,CAAC;;EAG3B;EAEAM,YAAYA,CAACN,IAAW;IAEtB,IAAI,CAACX,UAAU,CAACkB,cAAc,EAAE,CAACC,SAAS,CAACC,GAAG,IAAE;MAE5C,IAAI,CAACV,SAAS,CAACC,IAAI,CAAC;MACpB,IAAI,CAACX,UAAU,CAACqB,iBAAiB,EAAE;MACnCC,KAAK,CAAC,kBAAkB,CAAC;IAC3B,CAAC,EACDC,GAAG,IAAE;MAACD,KAAK,CAAC,QAAQ,GAAGC,GAAG,CAAC;IAAC,CAAC,CAAC;EAClC;EAEAf,cAAcA,CAAA;IACZ,IAAI,CAACP,UAAU,CAACuB,qBAAqB,EAAE;EACzC;EAEAR,YAAYA,CAACL,IAAW;IAEtB,IAAI,CAACX,UAAU,CAACyB,aAAa,EAAE,CAACN,SAAS,CACvCC,GAAG,IAAE;MACH,IAAI,CAACV,SAAS,EAAE;MAChB,IAAI,CAACV,UAAU,CAACqB,iBAAiB,EAAE;MACnCC,KAAK,CAAC,wBAAwB,CAAC;IACjC,CAAC,EACDC,GAAG,IAAE;MACHD,KAAK,CAAC,QAAQ,GAAGC,GAAG,CAAC;IACvB,CAAC,CACF;EACH;CACD;AAhEYzB,kBAAkB,GAAA4B,UAAA,EAL9B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACW/B,kBAAkB,CAgE9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}