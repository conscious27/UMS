{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport jwtDecode from 'jwt-decode';\nexport let RegCourseComponent = class RegCourseComponent {\n  constructor(objService, courseService, studentService) {\n    this.objService = objService;\n    this.courseService = courseService;\n    this.studentService = studentService;\n  }\n  ngOnInit() {\n    const token = localStorage.getItem('authToken');\n    this.tokenPayload = jwtDecode(token);\n    this.resetForm();\n    // this.studentService.getStudentInfo(this.tokenPayload.AdminId);\n    this.getAvailableCourses(this.studentService.StudentData.DepartmentId);\n    this.objService.getCoursesRegAddOn(this.tokenPayload.AdminId);\n    this.coursesNotChosen = this.courseService.CourseAddOnList.filter(course => {\n      return !this.objService.CourseRegAddOnList.some(chosenCourse => chosenCourse.CourseId === course.CourseId);\n    });\n  }\n  getAvailableCourses(id) {\n    this.courseService.getAllCourses(id);\n  }\n  resetForm(form) {\n    if (form != null) {\n      form.form.reset();\n    } else {\n      this.objService.CourseRegData = {\n        StudentId: this.tokenPayload.AdminId,\n        CourseId: \"\",\n        DateOfReg: new Date()\n      };\n    }\n  }\n  onSubmit(form) {\n    this.objService.postCourseReg().subscribe(res => {\n      this.resetForm(form);\n      this.objService.getCourseRegList();\n      alert('Course Registered Successful!');\n    }, err => {\n      alert('Error!' + err);\n    });\n  }\n};\nRegCourseComponent = __decorate([Component({\n  selector: 'app-reg-course',\n  templateUrl: './reg-course.component.html',\n  styleUrls: ['./reg-course.component.css']\n})], RegCourseComponent);","map":{"version":3,"names":["Component","jwtDecode","RegCourseComponent","constructor","objService","courseService","studentService","ngOnInit","token","localStorage","getItem","tokenPayload","resetForm","getAvailableCourses","StudentData","DepartmentId","getCoursesRegAddOn","AdminId","coursesNotChosen","CourseAddOnList","filter","course","CourseRegAddOnList","some","chosenCourse","CourseId","id","getAllCourses","form","reset","CourseRegData","StudentId","DateOfReg","Date","onSubmit","postCourseReg","subscribe","res","getCourseRegList","alert","err","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Project Genpact\\UMS\\UniversityApp\\src\\app\\student\\reg-course\\reg-course.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport jwtDecode from 'jwt-decode';\nimport { CourseInfoService } from 'src/app/shared/course-info.service';\nimport { CourseReg } from 'src/app/shared/course-reg.model';\nimport { CourseRegService } from 'src/app/shared/course-reg.service';\nimport { StudentInfoService } from 'src/app/shared/student-info.service';\n\n@Component({\n  selector: 'app-reg-course',\n  templateUrl: './reg-course.component.html',\n  styleUrls: ['./reg-course.component.css']\n})\nexport class RegCourseComponent implements OnInit {\n  tokenPayload:any;\n  coursesNotChosen:any[];\n  constructor(public objService:CourseRegService, public courseService:CourseInfoService,\n    public studentService:StudentInfoService ){}\n  ngOnInit(): void {\n    const token: any = localStorage.getItem('authToken');\n    this.tokenPayload = jwtDecode(token);\n    this.resetForm();\n    // this.studentService.getStudentInfo(this.tokenPayload.AdminId);\n    this.getAvailableCourses(this.studentService.StudentData.DepartmentId);\n    this.objService.getCoursesRegAddOn(this.tokenPayload.AdminId);\n\n    this.coursesNotChosen = this.courseService.CourseAddOnList.filter(\n      course => {\n        return !this.objService.CourseRegAddOnList.some(\n      chosenCourse => chosenCourse.CourseId ===course.CourseId );\n  });\n}\n\n\n  getAvailableCourses(id){\n    this.courseService.getAllCourses(id);\n  }\n\n  resetForm(form?:NgForm){\n    if(form!=null)\n    {\n      form.form.reset();\n    }\n    else{\n      this.objService.CourseRegData = {StudentId:this.tokenPayload.AdminId, CourseId:\"\", DateOfReg: new Date()};\n    }\n  }\n\n  onSubmit(form:NgForm)\n  {\n    this.objService.postCourseReg().subscribe(res=>\n      {\n        this.resetForm(form);\n        this.objService.getCourseRegList();\n        alert('Course Registered Successful!');\n      },\n      err=>{alert('Error!' + err);})\n  }\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,OAAOC,SAAS,MAAM,YAAY;AAW3B,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAG7BC,YAAmBC,UAA2B,EAASC,aAA+B,EAC7EC,cAAiC;IADvB,KAAAF,UAAU,GAAVA,UAAU;IAA0B,KAAAC,aAAa,GAAbA,aAAa;IAC3D,KAAAC,cAAc,GAAdA,cAAc;EAAsB;EAC7CC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAQC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACpD,IAAI,CAACC,YAAY,GAAGV,SAAS,CAACO,KAAK,CAAC;IACpC,IAAI,CAACI,SAAS,EAAE;IAChB;IACA,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACP,cAAc,CAACQ,WAAW,CAACC,YAAY,CAAC;IACtE,IAAI,CAACX,UAAU,CAACY,kBAAkB,CAAC,IAAI,CAACL,YAAY,CAACM,OAAO,CAAC;IAE7D,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACb,aAAa,CAACc,eAAe,CAACC,MAAM,CAC/DC,MAAM,IAAG;MACP,OAAO,CAAC,IAAI,CAACjB,UAAU,CAACkB,kBAAkB,CAACC,IAAI,CACjDC,YAAY,IAAIA,YAAY,CAACC,QAAQ,KAAIJ,MAAM,CAACI,QAAQ,CAAE;IAC9D,CAAC,CAAC;EACJ;EAGEZ,mBAAmBA,CAACa,EAAE;IACpB,IAAI,CAACrB,aAAa,CAACsB,aAAa,CAACD,EAAE,CAAC;EACtC;EAEAd,SAASA,CAACgB,IAAY;IACpB,IAAGA,IAAI,IAAE,IAAI,EACb;MACEA,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE;KAClB,MACG;MACF,IAAI,CAACzB,UAAU,CAAC0B,aAAa,GAAG;QAACC,SAAS,EAAC,IAAI,CAACpB,YAAY,CAACM,OAAO;QAAEQ,QAAQ,EAAC,EAAE;QAAEO,SAAS,EAAE,IAAIC,IAAI;MAAE,CAAC;;EAE7G;EAEAC,QAAQA,CAACN,IAAW;IAElB,IAAI,CAACxB,UAAU,CAAC+B,aAAa,EAAE,CAACC,SAAS,CAACC,GAAG,IAAE;MAE3C,IAAI,CAACzB,SAAS,CAACgB,IAAI,CAAC;MACpB,IAAI,CAACxB,UAAU,CAACkC,gBAAgB,EAAE;MAClCC,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,EACDC,GAAG,IAAE;MAACD,KAAK,CAAC,QAAQ,GAAGC,GAAG,CAAC;IAAC,CAAC,CAAC;EAClC;CAGD;AA/CYtC,kBAAkB,GAAAuC,UAAA,EAL9BzC,SAAS,CAAC;EACT0C,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACW1C,kBAAkB,CA+C9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}