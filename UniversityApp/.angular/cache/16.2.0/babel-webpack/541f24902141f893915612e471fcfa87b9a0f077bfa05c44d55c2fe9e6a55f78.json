{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport jwtDecode from 'jwt-decode';\nexport let RegCourseComponent = class RegCourseComponent {\n  constructor(objService, courseService, studentService, datePipe) {\n    this.objService = objService;\n    this.courseService = courseService;\n    this.studentService = studentService;\n    this.datePipe = datePipe;\n  }\n  ngOnInit() {\n    const token = localStorage.getItem('authToken');\n    this.tokenPayload = jwtDecode(token);\n    this.resetForm();\n    this.studentService.getStudentInfo(this.tokenPayload.AdminId).then(() => {\n      // CourseRegAddOnList is populated, now filter FacultyList again\n      this.getAvailableCourses(this.studentService.StudentData.DepartmentId);\n      console.log(this.courseService.CourseAddOnList);\n    });\n    this.coursesNotChosen = this.courseService.CourseAddOnList.filter(course => {\n      return !this.objService.CourseRegAddOnList.some(chosenCourse => chosenCourse.CourseId === course.CourseId);\n    });\n    console.log(this.coursesNotChosen);\n  }\n  getAvailableCourses(id) {\n    this.courseService.getAllCourses(id);\n  }\n  resetForm(form) {\n    if (form != null) {\n      form.form.reset();\n    } else {\n      const currentDate = new Date();\n      const formattedDate = this.datePipe.transform(currentDate, 'yyyy-MM-dd');\n      this.objService.CourseRegData = {\n        StudentId: this.tokenPayload.AdminId,\n        CourseId: \"\",\n        DateOfReg: formattedDate\n      };\n    }\n  }\n  onSubmit(form) {\n    this.objService.postCourseReg().subscribe(res => {\n      this.resetForm(form);\n      this.objService.getCourseRegList();\n      alert('Course Registered Successful!');\n    }, err => {\n      alert('Error!' + err);\n    });\n  }\n};\nRegCourseComponent = __decorate([Component({\n  selector: 'app-reg-course',\n  templateUrl: './reg-course.component.html',\n  styleUrls: ['./reg-course.component.css']\n})], RegCourseComponent);","map":{"version":3,"names":["Component","jwtDecode","RegCourseComponent","constructor","objService","courseService","studentService","datePipe","ngOnInit","token","localStorage","getItem","tokenPayload","resetForm","getStudentInfo","AdminId","then","getAvailableCourses","StudentData","DepartmentId","console","log","CourseAddOnList","coursesNotChosen","filter","course","CourseRegAddOnList","some","chosenCourse","CourseId","id","getAllCourses","form","reset","currentDate","Date","formattedDate","transform","CourseRegData","StudentId","DateOfReg","onSubmit","postCourseReg","subscribe","res","getCourseRegList","alert","err","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Project Genpact\\UMS\\UniversityApp\\src\\app\\student\\reg-course\\reg-course.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport jwtDecode from 'jwt-decode';\nimport { CourseInfoService } from 'src/app/shared/course-info.service';\nimport { CourseReg } from 'src/app/shared/course-reg.model';\nimport { CourseRegService } from 'src/app/shared/course-reg.service';\nimport { StudentInfoService } from 'src/app/shared/student-info.service';\n\n@Component({\n  selector: 'app-reg-course',\n  templateUrl: './reg-course.component.html',\n  styleUrls: ['./reg-course.component.css']\n})\nexport class RegCourseComponent implements OnInit {\n  tokenPayload:any;\n  coursesNotChosen:any[];\n  constructor(public objService:CourseRegService, public courseService:CourseInfoService,\n    public studentService:StudentInfoService, public datePipe: DatePipe ){}\n  ngOnInit(): void {\n    const token: any = localStorage.getItem('authToken');\n    this.tokenPayload = jwtDecode(token);\n    this.resetForm();\n\n    this.studentService.getStudentInfo(this.tokenPayload.AdminId).then(() => {\n      // CourseRegAddOnList is populated, now filter FacultyList again\n      this.getAvailableCourses(this.studentService.StudentData.DepartmentId)\n      console.log(this.courseService.CourseAddOnList)\n    });\n\n    \n    this.coursesNotChosen = this.courseService.CourseAddOnList.filter(\n      course => {\n        return !this.objService.CourseRegAddOnList.some(\n      chosenCourse => chosenCourse.CourseId ===course.CourseId );\n     });\n  \n\n  console.log(this.coursesNotChosen)\n}\n\n\n  getAvailableCourses(id){\n    this.courseService.getAllCourses(id);\n  }\n\n  resetForm(form?:NgForm){\n    if(form!=null)\n    {\n      form.form.reset();\n    }\n    else{\n      const currentDate = new Date();\n      const formattedDate = this.datePipe.transform(currentDate, 'yyyy-MM-dd');\n      this.objService.CourseRegData = {StudentId:this.tokenPayload.AdminId, CourseId:\"\", DateOfReg: formattedDate};\n    }\n  }\n\n  onSubmit(form:NgForm)\n  {\n    this.objService.postCourseReg().subscribe(res=>\n      {\n        this.resetForm(form);\n        this.objService.getCourseRegList();\n        alert('Course Registered Successful!');\n      },\n      err=>{alert('Error!' + err);})\n  }\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,OAAOC,SAAS,MAAM,YAAY;AAW3B,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAG7BC,YAAmBC,UAA2B,EAASC,aAA+B,EAC7EC,cAAiC,EAASC,QAAkB;IADlD,KAAAH,UAAU,GAAVA,UAAU;IAA0B,KAAAC,aAAa,GAAbA,aAAa;IAC3D,KAAAC,cAAc,GAAdA,cAAc;IAA4B,KAAAC,QAAQ,GAARA,QAAQ;EAAa;EACxEC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAQC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACpD,IAAI,CAACC,YAAY,GAAGX,SAAS,CAACQ,KAAK,CAAC;IACpC,IAAI,CAACI,SAAS,EAAE;IAEhB,IAAI,CAACP,cAAc,CAACQ,cAAc,CAAC,IAAI,CAACF,YAAY,CAACG,OAAO,CAAC,CAACC,IAAI,CAAC,MAAK;MACtE;MACA,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACX,cAAc,CAACY,WAAW,CAACC,YAAY,CAAC;MACtEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,aAAa,CAACiB,eAAe,CAAC;IACjD,CAAC,CAAC;IAGF,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAAClB,aAAa,CAACiB,eAAe,CAACE,MAAM,CAC/DC,MAAM,IAAG;MACP,OAAO,CAAC,IAAI,CAACrB,UAAU,CAACsB,kBAAkB,CAACC,IAAI,CACjDC,YAAY,IAAIA,YAAY,CAACC,QAAQ,KAAIJ,MAAM,CAACI,QAAQ,CAAE;IAC3D,CAAC,CAAC;IAGLT,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,gBAAgB,CAAC;EACpC;EAGEN,mBAAmBA,CAACa,EAAE;IACpB,IAAI,CAACzB,aAAa,CAAC0B,aAAa,CAACD,EAAE,CAAC;EACtC;EAEAjB,SAASA,CAACmB,IAAY;IACpB,IAAGA,IAAI,IAAE,IAAI,EACb;MACEA,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE;KAClB,MACG;MACF,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE;MAC9B,MAAMC,aAAa,GAAG,IAAI,CAAC7B,QAAQ,CAAC8B,SAAS,CAACH,WAAW,EAAE,YAAY,CAAC;MACxE,IAAI,CAAC9B,UAAU,CAACkC,aAAa,GAAG;QAACC,SAAS,EAAC,IAAI,CAAC3B,YAAY,CAACG,OAAO;QAAEc,QAAQ,EAAC,EAAE;QAAEW,SAAS,EAAEJ;MAAa,CAAC;;EAEhH;EAEAK,QAAQA,CAACT,IAAW;IAElB,IAAI,CAAC5B,UAAU,CAACsC,aAAa,EAAE,CAACC,SAAS,CAACC,GAAG,IAAE;MAE3C,IAAI,CAAC/B,SAAS,CAACmB,IAAI,CAAC;MACpB,IAAI,CAAC5B,UAAU,CAACyC,gBAAgB,EAAE;MAClCC,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,EACDC,GAAG,IAAE;MAACD,KAAK,CAAC,QAAQ,GAAGC,GAAG,CAAC;IAAC,CAAC,CAAC;EAClC;CAGD;AAxDY7C,kBAAkB,GAAA8C,UAAA,EAL9BhD,SAAS,CAAC;EACTiD,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWjD,kBAAkB,CAwD9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}